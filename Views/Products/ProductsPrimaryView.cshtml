@model EMatrix.ViewModels.Products.ProductsPrimaryViewModel

<link rel="stylesheet" href="~/css/products-preview-customization.css" asp-append-version="true"/>
<link rel="stylesheet" href="~/css/products-accordion-customization.css" asp-append-version="true"/>
<link rel="stylesheet" href="~/css/products-cart-customization.css" asp-append-version="true"/>

@{
    ViewData["Title"] = "Продукти";
}

<div class="container-fluid mt-3 products-container">
    @switch (Model.Accordion.Type)
    {
        case "MenuItem":
            <ul class="breadcrumb">
                <li><a href="@Url.Action("Index", "Home")">Начало</a></li>
                <span><i class="bi bi-chevron-right"></i></span>
                <li><a href="@Url.Action("ProductsPrimaryView", "Products")">Продукти</a></li>
            </ul>
            break;
        case "Option":
            <ul class="breadcrumb">
                <li><a href="@Url.Action("Index", "Home")">Начало</a></li>
                <span><i class="bi bi-chevron-right"></i></span>
                <li><a href="@Url.Action("ProductsPrimaryView", "Products")">Продукти</a></li>
                <span><i class="bi bi-chevron-right"></i></span>
                <li class="breadcrumb-item active" aria-current="page">@Model.Accordion.Options.First().Name</li>
            </ul>
            break;
    }
    <div class="products-preview">
        <div class="products-accordion-col">
            @await Html.PartialAsync("_AccordionPartial", Model.Accordion)
        </div>
        <div class="products-content-col">
            <div class="products-header">
                <div class="helper-buttons">
                    <button data-tooltip="Решетка" id="gridViewBtn" class="btn btn-outline-secondary">
                        <i class="bi bi-grid-3x3-gap"></i>
                    </button>
                    <button data-tooltip="Списък" id="listViewBtn" class="btn btn-outline-secondary">
                        <i class="bi bi-list"></i>
                    </button>
                    <a href="@Url.Action("Privacy", "Home")" id="help" class="btn btn-outline-secondary">
                        <i class="bi bi-question-circle"></i>
                        Помощ
                    </a>
                </div>
                <form asp-action="ProductsSearchView">
                    <div class="search-bar">
                        <input type="text" class="form-control" id="search" name="search"
                               placeholder="Търси продукти.."/>
                        <input type="hidden" name="optionId"
                               value="@(Model.Accordion.Type == "MenuItem" ? null : Model.Accordion.Options.First().Id)"/>
                        <input type="hidden" name="type" value="@Model.Accordion.Type"/>

                        <button type="submit" class="btn btn-main">Търси</button>
                    </div>
                </form>
                <div class="cart-wrapper">
                    <div id="cart" class="dropdown">
                        <a class="dropdown-toggle cart-heading" href="#" aria-expanded="false">
                            <span id="cart-total">0 продукт(а) - 0.00лв.</span>
                            <div class="icon-wrapper">
                                <i class="bi bi-cart3"></i>
                                <span id="cart-items" class="count-badge count-zero">0</span>
                            </div>
                        </a>
                        <div id="cart-content" class="dropdown-menu cart-content j-dropdown">
                            <div class="cart-content-header">
                                <div class="cart-header-item">Артикул</div>
                                <div class="cart-header-qty">Количество</div>
                                <div class="cart-header-price">Цена</div>
                            </div>
                            <ul id="cart-list">
                                <li>
                                    <p class="text-center cart-empty">Вашата количка е празна!</p>
                                </li>
                            </ul>
                            <div class="cart-content-footer">
                                Общо: <span id="cart-footer-total">0.00 лв.</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="menuView" class="menu-as-grid grid-view">
                @foreach (var cat in Model.MenuPreview.Options)
                {
                    <div id="card-@(cat.Id)" class="menu-card" onclick="toggleListView('@cat.Id')">
                        <img src="@Url.Content(cat.Icon)" alt="icon"/>
                        <div class="menu-content">
                            <p class="menu-title">@cat.Name</p>
                            <ul class="menu-preview-items">
                                @foreach (var item in cat.Children)
                                {
                                    <li class="nav-item">
                                        @if (Model.MenuPreview.Type == "MenuItem")
                                        {
                                            <a class="nav-link" asp-controller="Products"
                                               asp-action="ProductsPrimaryView"
                                               asp-route-id="@item.Key"
                                               asp-route-type="Option">
                                                @item.Value
                                            </a>
                                        }
                                        else if (Model.MenuPreview.Type == "Option")
                                        {
                                            <a class="nav-link" asp-controller="Products"
                                               asp-action="ProductsSecondaryView"
                                               asp-route-id="@item.Key"
                                               asp-route-childId="@cat.Id"
                                               asp-route-optionId="@Model.MenuPreview.Id">
                                                @item.Value
                                            </a>
                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const menuView = document.getElementById("menuView");
            const gridViewBtn = document.getElementById("gridViewBtn");
            const listViewBtn = document.getElementById("listViewBtn");

            // Apply stored view preference
            const savedView = localStorage.getItem("menuViewMode");
            if (savedView === "list") {
                menuView.classList.add("menu-as-list");
                menuView.classList.remove("menu-as-grid");
            } else {
                // default to grid
                menuView.classList.add("menu-as-grid");
                menuView.classList.remove("menu-as-list");
            }

            gridViewBtn.addEventListener("click", function () {
                menuView.classList.add("menu-as-grid");
                menuView.classList.remove("menu-as-list");
                localStorage.setItem("menuViewMode", "grid");
            });

            listViewBtn.addEventListener("click", function () {
                menuView.classList.add("menu-as-list");
                menuView.classList.remove("menu-as-grid");
                localStorage.setItem("menuViewMode", "list");
            });
        });


        function toggleListView(id) {
            const menuView = document.getElementById("menuView");
            menuView.classList.add("menu-as-list");
            menuView.classList.remove("menu-as-grid");
            const element = document.getElementById(`card-${id}`);
            element.scrollIntoView({behavior: "smooth", block: "center", inline: "nearest"});
        }
    </script>
    <script>
        let cart = JSON.parse(localStorage.getItem('cart')) || [];
        updateCartUI(); // render on load if there are items

        function updateCartUI() {
            const cartContent = document.querySelector("#cart-content");
            const cartTotal = document.querySelector("#cart-total");
            const cartItems = document.querySelector("#cart-items");

            cartContent.innerHTML = ""; // Clear all content

            let total = 0;
            let totalItems = 0;

            // Add Header always
            const header = document.createElement("div");
            header.classList.add("cart-content-header");
            header.innerHTML = `
        <div class="cart-header-item">Артикул</div>
        <div class="cart-header-qty">Количество</div>
        <div class="cart-header-price">Цена</div>
    `;
            cartContent.appendChild(header);

            // Create list container
            const ul = document.createElement("ul");

            if (cart.length === 0) {
                const li = document.createElement("li");
                li.innerHTML = `<p class="text-center cart-empty">Вашата количка е празна!</p>`;
                ul.appendChild(li);

                cartItems.textContent = "0";
                cartItems.classList.add("count-zero");
                cartTotal.textContent = "0 продукт(а) - 0.00лв.";
            } else {
                cart.forEach(item => {
                    total += item.price * item.qty;
                    totalItems += item.qty;

                    const li = document.createElement("li");
                    li.innerHTML = `
                <div class="cart-item">
                    <img src="${item.icon}" alt="${item.name}">
                    <div class="cart-item-names">
                        <p class="m-0 cart-item-name">${item.name}</p>
                        <p class="m-0 cart-item-subgroup">${item.subgroup}</p>
                    </div>
                    <div class="cart-item-qty-control">
                        <button class="qty-btn" onclick="changeQty('${item.id}', -1)">−</button>
                        <span class="qty-display">${item.qty}</span>
                        <button class="qty-btn" onclick="changeQty('${item.id}', 1)">+</button>
                    </div>
                    <p class="cart-item-price">${item.price.toFixed(2)} лв.</p>
                </div>
            `;
                    ul.appendChild(li);
                });

                cartItems.textContent = totalItems;
                cartItems.classList.remove("count-zero");
                cartTotal.textContent = `${totalItems} продукт(а) - ${total.toFixed(2)}лв.`;
            }

            cartContent.appendChild(ul);

            // Always show footer
            const footer = document.createElement("div");
            footer.classList.add("cart-content-footer");
            footer.innerHTML = `Общо: <span id="cart-footer-total">${total.toFixed(2)} лв.</span>`;
            cartContent.appendChild(footer);
        }
    </script>
}
