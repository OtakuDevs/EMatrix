@model EMatrix.ViewModels.Products.ProductsSecondaryViewModel

<link rel="stylesheet" href="~/css/products-preview-customization.css" asp-append-version="true"/>

@{
    ViewData["Title"] = "Продукти";
}

<div class="container-fluid mt-3 products-container">
    <ul class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")">Начало</a></li>
        <span><i class="bi bi-chevron-right"></i></span>
        <li><a href="@Url.Action("ProductsPrimaryView", "Products")">Продукти</a></li>
        <span><i class="bi bi-chevron-right"></i></span>
        <li>
            <a href="@Url.Action("ProductsPrimaryView", "Products", new { id = Model.Accordion.Options.First().Id, type = "Option" })">
                @Model.Accordion.Options.First().Name
            </a></li>
        <span><i class="bi bi-chevron-right"></i></span>
        <li class="breadcrumb-item active" aria-current="page">@Model.Accordion.SelectedSubGroupName</li>

    </ul>

    <div class="products-preview">
        <div class="products-header">
            <div class="search-bar w-100 pb-2">
                <form asp-action="ProductsSecondaryView" class="d-flex flex-wrap flex-grow-1 gap-2 w-100">
                    <div class="flex-grow-1">
                        <input type="hidden" name="optionId" value="@Model.Accordion.Options.First().Id"/>
                        <input type="hidden" name="childId" value="@Model.Accordion.SelectedChildId"/>
                        <input type="hidden" name="id" value="@Model.Accordion.SelectedSubGroupId"/>
                        <input class="form-control w-100" id="search" name="search" placeholder="Търси продукти.."
                               value="@Model.SearchTerm"/>
                    </div>
                    <button type="submit" class="btn btn-main text-light">Търси</button>
                </form>
            </div>
            <div class="grid-header">
                <button data-tooltip="Решетка" id="gridViewBtn" class="btn btn-outline-secondary">
                    <i class="bi bi-grid-3x3-gap"></i>
                </button>
                <button data-tooltip="Списък" id="listViewBtn" class="btn btn-outline-secondary">
                    <i class="bi bi-list"></i>
                </button>
                <a href="@Url.Action("Privacy", "Home")" id="help" class="btn btn-outline-secondary">
                    <i class="bi bi-question-circle"></i>
                    Помощ
                </a>
                <div class="cart-wrapper">
                    <div id="cart" class="dropdown">
                        <a class="dropdown-toggle cart-heading" href="#" aria-expanded="false">
                            <span id="cart-total">0 продукт(а) - 0.00лв.</span>
                            <div class="icon-wrapper">
                                <i class="bi bi-cart3"></i>
                                <span id="cart-items" class="count-badge count-zero">0</span>
                            </div>
                        </a>
                        <div id="cart-content" class="dropdown-menu cart-content j-dropdown">
                            <div class="cart-content-header">
                                <div class="cart-header-item">Артикул</div>
                                <div class="cart-header-qty">Количество</div>
                                <div class="cart-header-price">Цена</div>
                            </div>
                            <ul id="cart-list">
                                <li>
                                    <p class="text-center cart-empty">Вашата количка е празна!</p>
                                </li>
                            </ul>
                            <div class="cart-content-footer">
                                Общо: <span id="cart-footer-total">0.00 лв.</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="products-body">
            @await Html.PartialAsync("_AccordionPartial", Model.Accordion)

            @* RIGHT: PREVIEW GRID (or List) *@
            <div class="products-wrapper">
                <div class="menu-as-grid products-view" id="secondaryPreview">
                    @if (Model.Products.Any())
                    {
                        @foreach (var item in Model.Products)
                        {
                            <div class="menu-card">
                                <p class="product-code"><span>Код: </span>@item.Id</p>
                                <img src="@Url.Content(item.Icon)" alt="icon"/>
                                <div class="menu-content">
                                    <div class="menu-content-header">
                                        <p class="menu-title">@item.NameAlias</p>
                                        <p class="text-muted item-subcategory">@item.SubCategory</p>
                                    </div>

                                    <div class="menu-content-body">
                                        <p class="price align-content-center">
                                            <span>Цена: </span>@item.Price.ToString("F2", new System.Globalization.CultureInfo("bg-BG")) лв.
                                        </p>
                                        @if (item.Availability)
                                        {
                                            <p class="text-success">Налично</p>
                                        }
                                        else
                                        {
                                            <p class="text-danger">Изчерпано</p>
                                        }
                                    </div>

                                    <div class="menu-content-footer">
                                        @if (item.Availability)
                                        {
                                            <button class="btn btn-main btn-sm text-nowrap" onclick="addProductToCart(this)">Добави в количка</button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-main btn-sm text-nowrap">Запитване</button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="no-products-found">
                            <h3>Няма намерени продукти</h3>
                            <p>Изглежда, че няма продукти, отговарящи на вашето търсене или избрана категория.</p>
                            <p>Опитайте с по-обща или различна ключова дума.</p>
                            <p>Ако не откривате търсения продукт, <strong>свържете се с нас</strong> – ще се радваме да
                                помогнем!</p>
                        </div>
                    }

                </div>
                <!-- Pagination -->
                @if (Model.Products.Any())
                {
                    <form asp-controller="Products"
                          asp-action="ProductsSecondaryView">
                        <input type="hidden" name="optionId" value="@Model.Accordion.Options.First().Id"/>
                        <input type="hidden" name="childId" value="@Model.Accordion.SelectedChildId"/>
                        <input type="hidden" name="id" value="@Model.Accordion.SelectedSubGroupId"/>
                        <input type="hidden" name="search" value="@Model.SearchTerm"/>

                        @await Html.PartialAsync("_PaginationPartial")
                    </form>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        // In-memory cart array (just for demo — use localStorage or backend in production)
        const cart = [];

        function addProductToCart(button) {
            const card = button.closest('.menu-card');

            const idText = card.querySelector('.product-code')?.textContent.trim();
            const id = idText?.split(":")[1]?.trim();
            const name = card.querySelector('.menu-title')?.textContent.trim();
            const subgroup = card.querySelector('.item-subcategory')?.textContent.trim();
            const icon = card.querySelector('img').getAttribute('src');
            const priceText = card.querySelector('.price')?.textContent.trim();
            const price = parseFloat(priceText?.split(":")[1]?.replace("лв.", "").trim().replace(',', '.')) || 0;

            // Check if product already in cart
            const existing = cart.find(p => p.id === id);
            if (existing) {
                existing.qty += 1;
            } else {
                cart.push({ id, name, subgroup, icon, price, qty: 1 });
            }
            updateCartUI();
        }

        function updateCartUI() {
            const cartContent = document.querySelector("#cart-content");
            const cartTotal = document.querySelector("#cart-total");
            const cartItems = document.querySelector("#cart-items");

            // Reset content
            cartContent.innerHTML = "";

            if (cart.length === 0) {
                cartContent.innerHTML = `
            <ul><li><p class="text-center cart-empty">Вашата количка е празна!</p></li></ul>
        `;
                cartItems.textContent = "0";
                cartItems.classList.add("count-zero");
                cartTotal.textContent = "0 продукт(а) - 0.00лв.";
                return;
            }

            let total = 0;
            let totalItems = 0;

            // Header
            const header = document.createElement("div");
            header.classList.add("cart-content-header");
            header.innerHTML = `
        <div class="cart-header-item">Артикул</div>
        <div class="cart-header-qty">Количество</div>
        <div class="cart-header-price">Цена</div>
    `;
            cartContent.appendChild(header);

            // List
            const ul = document.createElement("ul");
            cart.forEach(item => {
                total += item.price * item.qty;
                totalItems += item.qty;

                const li = document.createElement("li");
                li.innerHTML = `
            <div class="cart-item">
                <img src="${item.icon}" alt="${item.name}">
                <div class="cart-item-names">
                    <p class="m-0 cart-item-name">${item.name}</p>
                    <p class="m-0 cart-item-subgroup">${item.subgroup}</p>
                </div>
                <p class="cart-item-qty">${item.qty} x</p>
                <p class="cart-item-price">${item.price.toFixed(2)} лв.</p>
            </div>
        `;
                ul.appendChild(li);
            });
            cartContent.appendChild(ul);

            // Footer
            const footer = document.createElement("div");
            footer.classList.add("cart-content-footer");
            footer.innerHTML = `Общо: <span id="cart-footer-total">${total.toFixed(2)} лв.</span>`;
            cartContent.appendChild(footer);

            cartItems.textContent = totalItems;
            cartItems.classList.remove("count-zero");
            cartTotal.textContent = `${totalItems} продукт(а) - ${total.toFixed(2)}лв.`;
        }

    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const menuView = document.getElementById("secondaryPreview");
            const gridViewBtn = document.getElementById("gridViewBtn");
            const listViewBtn = document.getElementById("listViewBtn");

            // Apply saved view mode from localStorage
            const savedView = localStorage.getItem("menuViewMode");
            if (savedView === "list") {
                menuView.classList.add("menu-as-list");
                menuView.classList.remove("menu-as-grid");
            } else {
                // Default to grid
                menuView.classList.add("menu-as-grid");
                menuView.classList.remove("menu-as-list");
            }

            // Set to grid
            gridViewBtn.addEventListener("click", function () {
                menuView.classList.add("menu-as-grid");
                menuView.classList.remove("menu-as-list");
                localStorage.setItem("menuViewMode", "grid");
            });

            // Set to list
            listViewBtn.addEventListener("click", function () {
                menuView.classList.add("menu-as-list");
                menuView.classList.remove("menu-as-grid");
                localStorage.setItem("menuViewMode", "list");
            });
        });

    </script>
}
