@model EMatrix.ViewModels.Products.ProductsSecondaryViewModel

<link rel="stylesheet" href="~/css/products-preview-customization.css" asp-append-version="true"/>

@{
    ViewData["Title"] = "Продукти";
}

<div class="container-fluid mt-3 products-container">
    <ul class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")">Начало</a></li>
        <span><i class="bi bi-chevron-right"></i></span>
        <li><a href="@Url.Action("ProductsPrimaryView", "Products")">Продукти</a></li>
        <span><i class="bi bi-chevron-right"></i></span>
        <li><a href="@Url.Action("ProductsPrimaryView", "Products", new { id = Model.Accordion.Options.First().Id, type="Option" })">
            @Model.Accordion.Options.First().Name
        </a></li>
        <span><i class="bi bi-chevron-right"></i></span>
        <li class="breadcrumb-item active" aria-current="page">@Model.Accordion.SelectedSubGroupName</li>

    </ul>

    <div class="products-preview">
        <div class="products-header">
            <div class="search-bar">
                <input class="form-control" id="search" name="search" placeholder="Търси продукти.."/>
                <button type="submit" class="btn btn-main text-light">Търси</button>
            </div>
            <div class="grid-header">
                <button data-tooltip="Решетка" id="gridViewBtn" class="btn btn-outline-secondary">
                    <i class="bi bi-grid-3x3-gap"></i>
                </button>
                <button data-tooltip="Списък" id="listViewBtn" class="btn btn-outline-secondary">
                    <i class="bi bi-list"></i>
                </button>
                <a href="@Url.Action("Privacy", "Home")" id="help" class="btn btn-outline-secondary">
                    <i class="bi bi-question-circle"></i>
                    Помощ
                </a>
                <div class="cart-wrapper">
                    <div id="cart" class="dropdown">
                        <a class="dropdown-toggle cart-heading" href="#" aria-expanded="false">
                            <span id="cart-total">0 продукт(а) - 0.00лв.</span>
                            <div class="icon-wrapper">
                                <i class="bi bi-cart3"></i>
                                <span id="cart-items" class="count-badge count-zero">0</span>
                            </div>
                        </a>
                        <div id="cart-content" class="dropdown-menu cart-content j-dropdown">
                            <ul>
                                <li>
                                    <p class="text-center cart-empty">Вашата количка е празна!</p>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="products-body">
            @await Html.PartialAsync("_AccordionPartial", Model.Accordion)

            @* RIGHT: PREVIEW GRID (or List) *@
            <div class="products-wrapper">
                <div class="menu-as-grid products-view" id="secondaryPreview">
                    @foreach (var item in Model.Products)
                    {
                        <div class="menu-card">
                            <img src="@Url.Content(item.Icon)" alt="icon"/>
                            <div class="menu-content">
                                <div class="menu-content-header">
                                    <p class="menu-title">@item.NameAlias</p>
                                    <p class="text-muted">@item.SubCategory</p>
                                </div>

                                <div class="menu-content-body">
                                    <p class="price align-content-center"><span>Цена: </span>@item.Price.ToString("F2", new System.Globalization.CultureInfo("bg-BG")) лв.</p>
                                    @if (item.Availability)
                                    {
                                        <p class="text-success">Налично</p>
                                    }
                                    else
                                    {
                                        <p class="text-danger">Изчерпано</p>
                                    }
                                </div>

                                <div class="menu-content-footer">
                                    @if (item.Availability)
                                    {
                                        <button class="btn btn-main btn-sm text-nowrap">Добави в количка</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-main btn-sm text-nowrap">Запитване</button>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <!-- Pagination -->
                <form asp-controller="Products"
                      asp-action="ProductsSecondaryView">
                    <input type="hidden" name="optionId" value="@Model.Accordion.Options.First().Id" />
                    <input type="hidden" name="childId" value="@Model.Accordion.SelectedChildId" />
                    <input type="hidden" name="id" value="@Model.Accordion.SelectedSubGroupId" />

                    @await Html.PartialAsync("_PaginationPartial")
                </form>

            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const menuView = document.getElementById("secondaryPreview");
            const gridViewBtn = document.getElementById("gridViewBtn");
            const listViewBtn = document.getElementById("listViewBtn");

            // Apply saved view mode from localStorage
            const savedView = localStorage.getItem("menuViewMode");
            if (savedView === "list") {
                menuView.classList.add("menu-as-list");
                menuView.classList.remove("menu-as-grid");
            } else {
                // Default to grid
                menuView.classList.add("menu-as-grid");
                menuView.classList.remove("menu-as-list");
            }

            // Set to grid
            gridViewBtn.addEventListener("click", function () {
                menuView.classList.add("menu-as-grid");
                menuView.classList.remove("menu-as-list");
                localStorage.setItem("menuViewMode", "grid");
            });

            // Set to list
            listViewBtn.addEventListener("click", function () {
                menuView.classList.add("menu-as-list");
                menuView.classList.remove("menu-as-grid");
                localStorage.setItem("menuViewMode", "list");
            });
        });

    </script>
}
