@using Microsoft.AspNetCore.Mvc.TagHelpers
@model EMatrix.ViewModels.MenuEditor.MenuItemAdminViewModel

<link rel="stylesheet" href="~/css/admin-panel-menu-customization.css" asp-append-version="true"/>

@{
    ViewData["ActiveTab"] = "Menu";
    ViewData["Title"] = "–†–µ–¥–∞–∫—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏—è";
}

<div class="container mt-3">
    @await Html.PartialAsync("_AdminPanelTabsPartial")

    <div class="content-wrapper update-menu-item">
        <div class="update-item-header">
            <h2 class="mt-4">–†–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –º–µ–Ω—é –µ–ª–µ–º–µ–Ω—Ç</h2>
            <hr/>
        </div>
        <form asp-action="UpdateMenuItemAssignments" method="post">
            <div class="update-item-body">
                <!-- Left Controls -->
                <div class="controls-section">

                    <input type="hidden" asp-for="Id"/>

                    <div class="form-floating mb-3">
                        <input asp-for="Name" class="form-control" placeholder="" readonly/>
                        <label asp-for="Name">–ò–º–µ –Ω–∞ –º–µ–Ω—é –µ–ª–µ–º–µ–Ω—Ç</label>
                    </div>

                    <div class="form-floating mb-3">
                        <select class="form-select" id="categorySelect">
                            <option value="">-- –ò–∑–±–µ—Ä–∏ –≥—Ä—É–ø–∞ --</option>
                            @foreach (var cat in Model.AvailableCategories)
                            {
                                <option value="@cat.Value">@cat.Value - @cat.Text</option>
                            }
                        </select>
                        <label for="categorySelect">–ì—Ä—É–ø–∏</label>
                    </div>

                    <div class="form-floating mb-3">
                        <select class="form-select" id="subcategorySelect">
                            <option value="">-- –ò–∑–±–µ—Ä–∏ –ø–æ–¥–≥—Ä—É–ø–∞ --</option>
                            @foreach (var sub in Model.AvailableSubCategories)
                            {
                                <option value="@sub.Value"
                                        data-cat="@sub.Value.Substring(0, 2)">@sub.Value - @sub.Text</option>
                            }
                        </select>
                        <label for="subcategorySelect">–ü–æ–¥–≥—Ä—É–ø–∏</label>
                    </div>

                    <hr/>

                    <div class="mb-3">
                        <label for="optionSelect" class="form-label">–û–ø—Ü–∏–∏</label>
                        <div class="input-group">
                            <select class="form-select" id="optionSelect">
                                <option value="">-- –ò–∑–±–µ—Ä–∏ –æ–ø—Ü–∏—è --</option>
                                @for (int i = 0; i < Model.Options.Count; i++)
                                {
                                    <option value="@i">@Model.Options[i].Name</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="d-flex flex-column gap-1">
                        <details class="card shadow-sm border-0 mb-2" id="editOptionDetails">
                            <summary class="btn btn-main text-light d-flex align-items-center justify-content-between">
                                ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –æ–ø—Ü–∏—è
                                <i class="bi bi-pencil-square ms-2"></i>
                            </summary>
                            <div class="card-body">
                                <div class="d-flex flex-column gap-2 mt-2">
                                    <input type="text" id="editOptionInput" class="form-control" placeholder="–ò–º–µ –Ω–∞ –æ–ø—Ü–∏—è—Ç–∞"/>
                                    <div class="d-flex flex-row gap-2">
                                        <input type="number" id="editOptionOrder" class="form-control" placeholder="–ü–æ–∑–∏—Ü–∏—è"/>
                                        <button type="button" class="btn btn-success" onclick="updateSelectedOption()">–ó–∞–ø–∞–∑–∏</button>
                                    </div>
                                </div>
                            </div>
                        </details>

                        <details class="card shadow-sm border-0 mb-2">
                            <summary class="btn btn-main text-light d-flex align-items-center justify-content-between">
                                ‚ûï –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –Ω–æ–≤–∞ –æ–ø—Ü–∏—è
                                <i class="bi bi-plus-square ms-2"></i>
                            </summary>
                            <div class="card-body">
                                <div class="d-flex flex-column gap-2 mt-2">
                                    <input type="text" id="newOptionInput" class="form-control" placeholder="–ò–º–µ –Ω–∞ –Ω–æ–≤–∞ –æ–ø—Ü–∏—è"/>
                                    <div class="d-flex flex-row gap-2">
                                        <input type="number" id="newOptionOrder" class="form-control" placeholder="–ü–æ–∑–∏—Ü–∏—è"/>
                                        <button type="button" class="btn btn-success" onclick="addMenuOption()">–î–æ–±–∞–≤–∏</button>
                                    </div>
                                </div>
                            </div>
                        </details>
                        <details id="optionSetDetails" class="card shadow-sm border-0 mb-2">
                            <summary class="btn btn-main text-light d-flex align-items-center justify-content-between" id="toggleOptionSetInputBtn">
                                ‚ûï –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –Ω–æ–≤ –∫–æ–º–ø–ª–µ–∫—Ç
                                <i class="bi bi-plus-square ms-2"></i>
                            </summary>
                            <div class="card-body">
                                <div class="d-flex flex-row gap-2">
                                    <input type="text" id="newSetInput" class="form-control" placeholder="–ò–º–µ –Ω–∞ –∫–æ–º–ø–ª–µ–∫—Ç"/>
                                    <button type="button" class="btn btn-success" id="saveSetBtn" onclick="addMenuOptionSet()">–î–æ–±–∞–≤–∏</button>
                                </div>
                            </div>
                        </details>
                        <div class="d-flex flex-row justify-content-evenly">
                            <button type="button" data-tooltip="–î–æ–±–∞–≤–∏ –ø–æ–¥–≥—Ä—É–ø–∞ –∫—ä–º –æ–ø—Ü–∏—è" class="btn btn-main" onclick="addSubcategoryToSelectedOption()">
                                –î–æ–±–∞–≤–∏ –ø–æ–¥–≥—Ä—É–ø–∞
                            </button>

                            <button type="submit" class="btn btn-success ms-auto">–ó–∞–ø–∞–∑–∏ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ</button>
                        </div>
                    </div>

                </div>
                <!-- Right Preview -->
                <div class="preview-section">
                    <ul class="menu-list">
                        @if (!Model.Options.Any())
                        {
                            <p id="no-options" class="text-muted fst-italic">–ù—è–º–∞ –¥–æ–±–∞–≤–µ–Ω–∏ –æ–ø—Ü–∏–∏</p>
                        }
                        else
                        {
                            for (int i = 0; i < Model.Options.Count; i++)
                            {
                                var option = Model.Options[i];

                                <li>
                                    <details>
                                        <summary>
                                            <strong>üìÅ @option.Name - @option.Order</strong>
                                            <button type="button" class="btn btn-outline-secondary btn-sm"
                                                    onclick="removeMenuOption(this)">X
                                            </button>
                                        </summary>
                                        <input type="hidden" asp-for="Options[i].Id"/>
                                        <input type="hidden" asp-for="Options[i].Name"/>
                                        <input type="hidden" asp-for="Options[i].Order"/>

                                        @if (option.Children != null && option.Children.Any())
                                        {
                                            <ul class="child-list">
                                                @for (int j = 0; j < option.Children.Count; j++)
                                                {
                                                    var child = option.Children[j];

                                                    @if (child.Type == "SubGroup")
                                                    {
                                                        <li class="list-group-item">
                                                            <span>
                                                                üìå @child.DisplayName
                                                                <button type="button"
                                                                        class="btn btn-outline-secondary btn-sm"
                                                                        onclick="removeMenuOptionSubgroup(this)">X</button>
                                                            </span>
                                                            <input type="hidden"
                                                                   asp-for="Options[i].Children[j].Id"/>
                                                            <input type="hidden"
                                                                   asp-for="Options[i].Children[j].ReferenceId"/>
                                                            <input type="hidden"
                                                                   asp-for="Options[i].Children[j].DisplayName"/>
                                                            <input type="hidden"
                                                                   asp-for="Options[i].Children[j].Type"/>
                                                        </li>
                                                    }
                                                    else if (child.Type == "SubGroupSet" && child.SubGroupSetItems != null)
                                                    {
                                                        <details>
                                                            <summary>
                                                                <strong>üìÇ @child.DisplayName</strong>
                                                                <div class="d-flex flex-row gap-2">
                                                                    <button type="button"
                                                                            class="btn btn-sm btn-main"
                                                                            onclick="addSubgroupToThisSet(this)">–î–æ–±–∞–≤–∏ –ø–æ–¥–≥—Ä—É–ø–∞ –∫—ä–º –∫–æ–º–ø–ª–µ–∫—Ç
                                                                    </button>
                                                                    <button type="button"
                                                                            class="btn btn-outline-secondary btn-sm"
                                                                            onclick="removeMenuOptionSet(this)">X
                                                                    </button>
                                                                </div>
                                                            </summary>
                                                            <ul class="set-list">
                                                                @for (int k = 0; k < child.SubGroupSetItems.Count; k++)
                                                                {
                                                                    var setItem = child.SubGroupSetItems[k];

                                                                    <li>
                                                                        <span>
                                                                            üîπ @setItem.Alias
                                                                            <button type="button"
                                                                                    class="btn btn-outline-secondary btn-sm"
                                                                                    onclick="removeMenuOptionSetSubgroup(this)">X</button>
                                                                        </span>
                                                                        <input type="hidden"
                                                                               asp-for="Options[i].Children[j].SubGroupSetItems[k].Id"/>
                                                                        <input type="hidden"
                                                                               asp-for="Options[i].Children[j].SubGroupSetItems[k].Alias"/>
                                                                    </li>
                                                                }
                                                            </ul>
                                                        </details>
                                                    }
                                                }
                                            </ul>
                                        }
                                        else
                                        {
                                            <p id="no-option-children-@i" class="text-muted fst-italic">–ù—è–º–∞
                                                –¥–æ–±–∞–≤–µ–Ω–∏ –ø–æ–¥–æ–ø—Ü–∏–∏</p>
                                        }
                                    </details>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="~/js/menu-item-update.js" asp-append-version="true"></script>
    <script>
        const optionsData = @Html.Raw(Json.Serialize(Model.Options));
    </script>
}
