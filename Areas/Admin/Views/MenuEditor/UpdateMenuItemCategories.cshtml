@using Microsoft.AspNetCore.Mvc.TagHelpers
@model EMatrix.ViewModels.MenuEditor.MenuItemAdminViewModel

@{
    ViewData["Title"] = "Редактиране на меню елемент";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="UpdateMenuItemAssignments" method="post">
    <input type="hidden" asp-for="Id"/>

    <div class="form-group">
        <label asp-for="Name">Име на меню елемент</label>
        <input asp-for="Name" class="form-control" readonly/>
    </div>

    <div class="form-floating mb-3">
        <select class="form-select" id="categorySelect">
            <option value="">-- Избери група --</option>
            @foreach (var cat in Model.AvailableCategories)
            {
                <option value="@cat.Value">@cat.Value - @cat.Text</option>
            }
        </select>
        <label for="categorySelect">Групи</label>
    </div>
    <div class="form-floating mb-3">
        <select class="form-select" id="subcategorySelect">
            <option value="">-- Избери подгрупа --</option>
            @foreach (var sub in Model.AvailableSubCategories)
            {
                <option value="@sub.Value"
                        data-cat="@sub.Value.Substring(0, 2)">@sub.Value - @sub.Text</option>
            }
        </select>
        <label for="subcategorySelect">Подгрупи</label>
    </div>

    <hr/>

    <div id="menuOptionsContainer">
        @for (int i = 0; i < Model.Options.Count; i++)
        {
            var option = Model.Options[i];
            <div id="option_@i" class="menu-option" data-index="@i" data-child-count="@option.Children?.Count ?? 0">
                <div class="form-group">
                    <label>Име на опция</label>
                    <input type="text" name="Options[@i].Name" value="@option.Name" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Ред</label>
                    <input type="number" name="Options[@i].Order" value="@option.Order" class="form-control" />
                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-secondary" onclick="addSubcategory(@i)">Добави подгрупа</button>
                    <button type="button" class="btn btn-secondary" onclick="addSet(@i)">Добави комплект</button>
                </div>
                <div class="children-container">
                    @if (option.Children != null)
                    {
                        for (int j = 0; j < option.Children.Count; j++)
                        {
                            var child = option.Children[j];
                            if (child.Type == "SubGroup")
                            {
                                <div class="menu-option-child">
                                    <input type="hidden" name="Options[@i].Children[@j].Type" value="SubGroup" />
                                    <input type="hidden" name="Options[@i].Children[@j].ReferenceId" value="@child.ReferenceId" />
                                    <span>@child.DisplayName</span>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="this.parentElement.remove()">Премахни</button>
                                </div>
                            }
                            else if (child.Type == "SubGroupSet")
                            {
                                var setId = $"set_{i}_{j}";
                                var setId_items = setId + "_items";
                                <div class="menu-option-set" id="@setId">
                                    <input type="hidden" name="Options[@i].Children[@j].Type" value="SubGroupSet" />
                                    <input type="hidden" name="Options[@i].Children[@j].DisplayName" value="@child.DisplayName" />
                                    <div><strong>@child.DisplayName</strong></div>
                                    <div class="set-items" id="@setId_items">
                                        @if (child.SubGroupSetItems != null)
                                        {
                                            for (int k = 0; k < child.SubGroupSetItems.Count; k++)
                                            {
                                                var item = child.SubGroupSetItems[k];
                                                <div class="set-item">
                                                    <input type="hidden" name="Options[@i].Children[@j].SubGroupSetItems[@k].Id" value="@item.Id" />
                                                    <span>@item.Alias</span>
                                                    <button type="button" class="btn btn-danger btn-sm" onclick="this.parentElement.remove()">Премахни</button>
                                                </div>
                                            }
                                        }
                                    </div>
                                    <button type="button" class="btn btn-secondary btn-sm" onclick="addSubcategoryToSet(@i, @j, '@setId_items')">Добави подгрупа към комплекта</button>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="this.parentElement.remove()">Премахни комплект</button>
                                    <hr/>
                                </div>
                            }
                        }
                    }
                </div>
                <hr />
            </div>
        }

    </div>

    <button type="button" class="btn btn-primary" onclick="addMenuOption()">Добави опция</button>

    <hr/>

    <button type="submit" class="btn btn-success">Запази промените</button>
</form>

@section Scripts {
    <script>
        let optionIndex = @Model.Options.Count;

        function addMenuOption() {
            const container = document.getElementById('menuOptionsContainer');
            const currentIndex = optionIndex++;
            const optionDiv = document.createElement('div');
            optionDiv.id = `option_${currentIndex}`;
            optionDiv.dataset.index = currentIndex;
            optionDiv.dataset.childCount = 0;
            optionDiv.classList.add('menu-option');

            optionDiv.innerHTML = `
            <div class="form-group">
                <label>Име на опция</label>
                <input type="text" name="Options[${currentIndex}].Name" class="form-control" />
            </div>
            <div class="form-group">
                <label>Ред</label>
                <input type="number" name="Options[${currentIndex}].Order" class="form-control" />
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-secondary" onclick="addSubcategory(${currentIndex})">Добави подгрупа</button>
                <button type="button" class="btn btn-secondary" onclick="addSet(${currentIndex})">Добави комплект</button>
            </div>
            <div class="children-container"></div>
            <hr />
        `;

            container.appendChild(optionDiv);
        }

        function addSubcategory(optionIdx) {
            const optionDiv = document.getElementById(`option_${optionIdx}`);
            const childrenContainer = optionDiv.querySelector('.children-container');
            let childIdx = parseInt(optionDiv.dataset.childCount || "0");
            const subcategorySelect = document.getElementById('subcategorySelect');
            const selectedOption = subcategorySelect.options[subcategorySelect.selectedIndex];

            if (selectedOption && selectedOption.value) {
                const childDiv = document.createElement('div');
                childDiv.classList.add('menu-option-child');

                childDiv.innerHTML = `
                <input type="hidden" name="Options[${optionIdx}].Children[${childIdx}].Type" value="SubGroup" />
                <input type="hidden" name="Options[${optionIdx}].Children[${childIdx}].ReferenceId" value="${selectedOption.value}" />
                <span>${selectedOption.text}</span>
                <button type="button" class="btn btn-danger btn-sm" onclick="this.parentElement.remove()">Премахни</button>
            `;

                childrenContainer.appendChild(childDiv);
                optionDiv.dataset.childCount = ++childIdx;
            }
        }

        function addSet(optionIdx) {
            const optionDiv = document.getElementById(`option_${optionIdx}`);
            const childrenContainer = optionDiv.querySelector('.children-container');
            let childIdx = parseInt(optionDiv.dataset.childCount || "0");
            const setName = prompt("Въведете име на комплекта:");

            if (setName) {
                const setId = `set_${optionIdx}_${childIdx}`;
                const setDiv = document.createElement('div');
                setDiv.classList.add('menu-option-set');
                setDiv.id = setId;

                setDiv.innerHTML = `
            <input type="hidden" name="Options[${optionIdx}].Children[${childIdx}].Type" value="SubGroupSet" />
            <input type="hidden" name="Options[${optionIdx}].Children[${childIdx}].DisplayName" value="${setName}" />
            <div><strong>${setName}</strong></div>
            <div class="set-items" id="${setId}_items"></div>
            <button type="button" class="btn btn-secondary btn-sm" onclick="addSubcategoryToSet(${optionIdx}, ${childIdx}, '${setId}_items')">Добави подгрупа към комплекта</button>
            <button type="button" class="btn btn-danger btn-sm" onclick="this.parentElement.remove()">Премахни комплект</button>
            <hr/>
        `;

                childrenContainer.appendChild(setDiv);
                optionDiv.dataset.childCount = ++childIdx;
            }


        }

        function addSubcategoryToSet(optionIdx, childIdx, setItemsContainerId) {
            const setItemsContainer = document.getElementById(setItemsContainerId);
            const subcategorySelect = document.getElementById('subcategorySelect');
            const selectedOption = subcategorySelect.options[subcategorySelect.selectedIndex];

            if (selectedOption && selectedOption.value) {
                const itemCount = setItemsContainer.children.length;
                const itemDiv = document.createElement('div');
                itemDiv.classList.add('set-item');

                itemDiv.innerHTML = `
            <input type="hidden" name="Options[${optionIdx}].Children[${childIdx}].SubGroupSetItems[${itemCount}].Id" value="${selectedOption.value}" />
            <span>${selectedOption.text}</span>
            <button type="button" class="btn btn-danger btn-sm" onclick="this.parentElement.remove()">Премахни</button>
        `;

                setItemsContainer.appendChild(itemDiv);
            }
}
    </script>

    <script>
        document.getElementById("categorySelect").addEventListener("change", function () {
            var selectedPrefix = this.value;
            var subcategorySelect = document.getElementById("subcategorySelect");

            Array.from(subcategorySelect.options).forEach(opt => {
                opt.hidden = opt.value !== "" && !opt.dataset.cat?.startsWith(selectedPrefix);
            });

            subcategorySelect.value = "";
        });
    </script>
}
